<div class="flex-column mt-3" id="entity-div" style="display: none;">
    <div class="alert alert-warning alert-dismissible show" role="alert">
        <strong><i class="bi bi-box"></i>&nbsp;&nbsp;Entidades</strong><small> : requer permissão
            [<strong>tools-dev-entity-create</strong>]</small>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div id="entity-div-create">
        <form class="form-group">
            <div class="mb-4" id="entity-input-name">
                <label for="entity-input-text-name" class="label mb-1 text-secondary"><i
                        class="bi bi-box"></i>&nbsp;Nome</label>
                <input type="text" class="form-control" id="entity-name" value="pessoa"
                    placeholder="// #issue: pesquisar no banco entidade com mesmo nome a partir do terceiro caracter digitado">
            </div>
            <div class="mb-4 " style="display: none;" id="entity-input-namespace">
                <label for="entity-namespace" class="label mb-1 text-secondary"><i class="bi bi-tags"></i>&nbsp;Namespace
                    <small>nomes dos campos separados por
                        virgulas. <span class="text-danger"> Os campos id, crdate e isctive são criados pelo sistema</span>.</small></label>
                <textarea class="form-control" style="height: 5rem;" id="entity-namespace"
                    placeholder="// #issue: analisar o namespace de todo sistema">
nome, email, celular, senha</textarea>
            </div>
            <div class="mb-4" style="display: none;" id="entity-input-fields">
                <label for="entity-fields" class="label mb-1 text-secondary"><i class="bi bi-server"></i>&nbsp;Campos</label>
                <div class="table-responsive border-top">
                    <table class="table table-hover">
                        <thead>
                            <th class="text-left">Nome</th>
                            <th class="text-center" style="width: 8rem;">Privacidade&nbsp;<i class="bi bi-lock-fill"></i>
                            </th>
                            <th class="text-center" style="width: 8rem;">Tipo</th>
                            <th class="text-center" style="width: 8rem;">Tamanho</th>
                            <th class="text-left" style="width: 2.5rem;">Null</th>
                            <th class="text-left fw-bold" style="width: 2.5rem;"><i class="bi bi-search"></i></th>
                        </thead>
                        <tbody id="entity-fields-tbody"></tbody>
                    </table>
                </div>
            </div>
            <div class="mb-4 entity-input-form" style="display: none;" id="entity-div-fields-form">
                <label for="entity-name" class="label mb-1 text-secondary">
                    <input class="form-check-input" type="checkbox" id="entity-checkbox-form">&nbsp;Formulário</label>
                <div class="table-responsive border-top" id="entity-div-table-fields-form" style="display: none;">
                    <table class="table table-striped table-hover">
                        <thead>
                            <th class="text-left">Id</th>
                            <th class="text-center">Tipo</th>
                            <th class="text-center">Label</th>
                            <th class="text-center">Valor Inicial</th>
                            <th class="text-center">Obrigatório</th>
                            <th class="text-center">Placeholder</th>
                            <th class="text-center">Formatador</th>
                            <!-- #issue: implantar para ser AAA -->
                            <!-- https://ceweb.br/cartilhas/cartilha-w3cbr-acessibilidade-web-fasciculo-IV/ -->
                            <th class="text-center">wcag&nbsp;<i class="bi bi-emoji-smile"></i></th>
                        </thead>
                        <tbody id="entity-fields-form-tbody"></tbody>
                    </table>
                    <div class="d-grid gap-2" id="entity-btn-create" style="display: none;">
                        <button class="btn btn-success" type="button"><i class="bi bi-box"></i>&nbsp;&nbsp;Criar
                            entidade</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<script>

    (() => {

        let btn = document.getElementById('entity-btn-add')
        btn.addEventListener('click', (event) => {

            event.preventDefault()

            let div = document.getElementById('entity-div')
                , inputName = document.getElementById('entity-input-name')
                , name = document.getElementById('entity-name')
                , nameIsValid = false
                , enter = false
                , inputNamespace = document.getElementById('entity-input-namespace')
                , namespace = document.getElementById('entity-namespace')
                , namespaceIsValid = false
                , fields = document.getElementById('entity-input-fields')
                , tbodyFields = document.getElementById('entity-fields-tbody')
                , tbodyFieldsHtml = ''
                , selectFieldPrivacy
                , selectFieldType
                , inputFieldLength
                , fieldNullable
                , fieldSearcheable
                , checkboxForm = document.getElementById('entity-checkbox-form')
                , divFieldsForm = document.getElementById('entity-div-fields-form')
                , showForm = false
                , form = document.getElementById('entity-div-table-fields-form')
                , tbodyForm = document.getElementById('entity-fields-form-tbody')
                , tbodyFormHtml = ''
                , btnCreate = document.getElementById('entity-btn-create')

            div.style.display = 'block'
            name.focus()
            inputName.style.display = 'block'
            name.addEventListener('keypress', (event) => {

                enter = event.charCode === 13

                if (enter) {

                    event.preventDefault()

                    // #issue: pesquisar no banco entidade com mesmo nome a partir do terceiro caracter digitado
                    nameIsValid = name.value.length >= 3

                    // #issue: não sei usar regex em 202109140107
                    
                    if (nameIsValid) {

                        inputNamespace.style.display = 'block'
                        namespace.focus()
                        namespace.addEventListener('keypress', (event) => {

                            enter = event.charCode === 13

                            if (enter) {

                                event.preventDefault()

                                // #issue: analisar o namespace de todo sistema
                                namespaceIsValid = namespace.value.length >= 3

                                if (namespaceIsValid) {

                                    fields.style.display = 'block'
                                    divFieldsForm.style.display = 'block'

                                    checkboxForm.addEventListener('click', (event) => {

                                        showForm = checkboxForm.checked
                                        if (showForm) {

                                            form.style.display = 'block'

                                        } else {

                                            form.style.display = 'none'

                                        }

                                    })

                                    try {

                                        arrNamespace = namespace.value.split(',')
                                        let fieldname, fieldprivacy
                                        tbodyFields.innerHTML = helperTbody(arrNamespace, tbodyFieldsHtml, tbodyFormHtml, 'tbodyFields')
                                        tbodyForm.innerHTML = helperTbody(arrNamespace, tbodyFieldsHtml, tbodyFormHtml, 'tbodyForm')
                                        btnCreate.style.display = 'block'

                                    } catch (err) {

                                        alert('Erro', err, 'danger')

                                    }

                                } else {

                                    tbodyFields.innerHTML = ''
                                    tbodyForm.innerHTML = ''
                                    fields.style.display = 'none'
                                    divFieldsForm.style.display = 'none'
                                    namespace.value = ''
                                    inputNamespace.style.display = 'none'
                                    name.focus()

                                }
                            }
                        })

                    } else {

                        name.value = ''
                        div.style.display = 'none'

                    }
                }
            }
            )
        })

        function helperTbody(arrNamespace, tbodyFieldsHtml, tbodyFormHtml, whichTbody) {

            let fieldname

            switch (whichTbody) {

                case 'tbodyFields':

                    for (i = 0; i < arrNamespace.length; i++) {

                        fieldname = arrNamespace[i].toLowerCase().trim()

                        tbodyFieldsHtml += `<tr>
                                                <td>
                                                    <input class="form-control" type="text" id="field-${fieldname}-name-input" entityfieldformtype="text" value="${fieldname}" readonly>
                                                </td>
                                                <td class="text-center" entityfieldformtype="select">
                                                    <select class="form-select select-privacy" aria-label="lgpd" id="field-${fieldname}-privacy">
                                                        <option value="confidential">Dado:</option>
                                                        <option value="confidential">Pessoal</option>
                                                        <option value="confidential">Comercial</option>
                                                        <option value="sensitive">Sensível</option>
                                                        <option value="confidential">Público</option>
                                                        <option value="confidential">Anonimizado</option>
                                                    </select>
                                                </td>
                                                <td class="text-center" entityfieldformtype="select">
                                                    <select class="form-select select-type" aria-label="lgpd" id="field-${fieldname}-type">
                                                        <option value="confidential">Tipo:</option>
                                                        <option value="Number">Número</option>
                                                        <option value="String">Texto</option>
                                                        <option value="Date">Data</option>
                                                        <option value="Boolean">Booleano</option>
                                                    </select>
                                                </td>
                                                <td class="text-center" id="field-${fieldname}-length" entityfieldformtype="number"></td>
                                                <td class="text-left mr-o pr-0">
                                                    <div class="form-check form-switch pr-0 mr-0 align-middle">
                                                        <input class="form-check-input" type="checkbox" id="field-${fieldname}-nullable=input" entityfieldformtype="checkbox">
                                                    </div>
                                                </td>
                                                <td class="text-center" id="field-${fieldname}-searcheble">
                                                    <div class="form-check form-switch pr-0 mr-0 align-middle">
                                                        <input class="form-check-input" type="checkbox" id="field-${fieldname}-searcheble=input" entityfieldformtype="checkbox">
                                                    </div>
                                                </td>
                                            </tr>`

                    }

                    return tbodyFieldsHtml
                    break

                case 'tbodyForm':
                    for (i = 0; i < arrNamespace.length; i++) {

                        tbodyFormHtml += `<tr>
                                            <td>${fieldname}</td>
                                            <td class="text-center" id="field-${fieldname}-form-type">type</td>
                                            <td class="text-center" id="field-${fieldname}-form-label">label</td>
                                            <td class="text-center" id="field-${fieldname}-form-value">value</td>
                                            <td class="text-center" id="field-${fieldname}-form-required">
                                                <input class="form-check-input" type="checkbox" id="field-${fieldname}-form-required" checked>
                                            </td>
                                            <td class="text-center" id="field-${fieldname}-form-placeholder">placeholder</td>
                                            <td class="text-center" id="field-${fieldname}-form-formatter">formatter</td>
                                            <td class="text-center" id="field-${fieldname}-form-wcag">wcag</td>
                                        </tr>`

                    }

                    return tbodyFormHtml
                    break

                default:
                    return alert('Erro', 'whichTbody diferente de tbodyFields ou tbodyForm', 'danger')
                    break

            }

        }

    })()

</script>